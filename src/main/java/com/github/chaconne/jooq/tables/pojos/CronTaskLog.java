/*
 * This file is generated by jOOQ.
 */
package com.github.chaconne.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CronTaskLog implements Serializable {

    private static final long serialVersionUID = 1L;

    private String taskName;
    private String taskGroup;
    private String taskClass;
    private String taskMethod;
    private String initialParameter;
    private String taskStatus;
    private String logLevel;
    private String message;
    private String errorDetail;
    private LocalDateTime logDatetime;

    public CronTaskLog() {}

    public CronTaskLog(CronTaskLog value) {
        this.taskName = value.taskName;
        this.taskGroup = value.taskGroup;
        this.taskClass = value.taskClass;
        this.taskMethod = value.taskMethod;
        this.initialParameter = value.initialParameter;
        this.taskStatus = value.taskStatus;
        this.logLevel = value.logLevel;
        this.message = value.message;
        this.errorDetail = value.errorDetail;
        this.logDatetime = value.logDatetime;
    }

    public CronTaskLog(
        String taskName,
        String taskGroup,
        String taskClass,
        String taskMethod,
        String initialParameter,
        String taskStatus,
        String logLevel,
        String message,
        String errorDetail,
        LocalDateTime logDatetime
    ) {
        this.taskName = taskName;
        this.taskGroup = taskGroup;
        this.taskClass = taskClass;
        this.taskMethod = taskMethod;
        this.initialParameter = initialParameter;
        this.taskStatus = taskStatus;
        this.logLevel = logLevel;
        this.message = message;
        this.errorDetail = errorDetail;
        this.logDatetime = logDatetime;
    }

    /**
     * Getter for <code>cron_task_log.task_name</code>.
     */
    public String getTaskName() {
        return this.taskName;
    }

    /**
     * Setter for <code>cron_task_log.task_name</code>.
     */
    public CronTaskLog setTaskName(String taskName) {
        this.taskName = taskName;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.task_group</code>.
     */
    public String getTaskGroup() {
        return this.taskGroup;
    }

    /**
     * Setter for <code>cron_task_log.task_group</code>.
     */
    public CronTaskLog setTaskGroup(String taskGroup) {
        this.taskGroup = taskGroup;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.task_class</code>.
     */
    public String getTaskClass() {
        return this.taskClass;
    }

    /**
     * Setter for <code>cron_task_log.task_class</code>.
     */
    public CronTaskLog setTaskClass(String taskClass) {
        this.taskClass = taskClass;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.task_method</code>.
     */
    public String getTaskMethod() {
        return this.taskMethod;
    }

    /**
     * Setter for <code>cron_task_log.task_method</code>.
     */
    public CronTaskLog setTaskMethod(String taskMethod) {
        this.taskMethod = taskMethod;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.initial_parameter</code>.
     */
    public String getInitialParameter() {
        return this.initialParameter;
    }

    /**
     * Setter for <code>cron_task_log.initial_parameter</code>.
     */
    public CronTaskLog setInitialParameter(String initialParameter) {
        this.initialParameter = initialParameter;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.task_status</code>.
     */
    public String getTaskStatus() {
        return this.taskStatus;
    }

    /**
     * Setter for <code>cron_task_log.task_status</code>.
     */
    public CronTaskLog setTaskStatus(String taskStatus) {
        this.taskStatus = taskStatus;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.log_level</code>.
     */
    public String getLogLevel() {
        return this.logLevel;
    }

    /**
     * Setter for <code>cron_task_log.log_level</code>.
     */
    public CronTaskLog setLogLevel(String logLevel) {
        this.logLevel = logLevel;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.message</code>.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Setter for <code>cron_task_log.message</code>.
     */
    public CronTaskLog setMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.error_detail</code>.
     */
    public String getErrorDetail() {
        return this.errorDetail;
    }

    /**
     * Setter for <code>cron_task_log.error_detail</code>.
     */
    public CronTaskLog setErrorDetail(String errorDetail) {
        this.errorDetail = errorDetail;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.log_datetime</code>.
     */
    public LocalDateTime getLogDatetime() {
        return this.logDatetime;
    }

    /**
     * Setter for <code>cron_task_log.log_datetime</code>.
     */
    public CronTaskLog setLogDatetime(LocalDateTime logDatetime) {
        this.logDatetime = logDatetime;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CronTaskLog other = (CronTaskLog) obj;
        if (this.taskName == null) {
            if (other.taskName != null)
                return false;
        }
        else if (!this.taskName.equals(other.taskName))
            return false;
        if (this.taskGroup == null) {
            if (other.taskGroup != null)
                return false;
        }
        else if (!this.taskGroup.equals(other.taskGroup))
            return false;
        if (this.taskClass == null) {
            if (other.taskClass != null)
                return false;
        }
        else if (!this.taskClass.equals(other.taskClass))
            return false;
        if (this.taskMethod == null) {
            if (other.taskMethod != null)
                return false;
        }
        else if (!this.taskMethod.equals(other.taskMethod))
            return false;
        if (this.initialParameter == null) {
            if (other.initialParameter != null)
                return false;
        }
        else if (!this.initialParameter.equals(other.initialParameter))
            return false;
        if (this.taskStatus == null) {
            if (other.taskStatus != null)
                return false;
        }
        else if (!this.taskStatus.equals(other.taskStatus))
            return false;
        if (this.logLevel == null) {
            if (other.logLevel != null)
                return false;
        }
        else if (!this.logLevel.equals(other.logLevel))
            return false;
        if (this.message == null) {
            if (other.message != null)
                return false;
        }
        else if (!this.message.equals(other.message))
            return false;
        if (this.errorDetail == null) {
            if (other.errorDetail != null)
                return false;
        }
        else if (!this.errorDetail.equals(other.errorDetail))
            return false;
        if (this.logDatetime == null) {
            if (other.logDatetime != null)
                return false;
        }
        else if (!this.logDatetime.equals(other.logDatetime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.taskName == null) ? 0 : this.taskName.hashCode());
        result = prime * result + ((this.taskGroup == null) ? 0 : this.taskGroup.hashCode());
        result = prime * result + ((this.taskClass == null) ? 0 : this.taskClass.hashCode());
        result = prime * result + ((this.taskMethod == null) ? 0 : this.taskMethod.hashCode());
        result = prime * result + ((this.initialParameter == null) ? 0 : this.initialParameter.hashCode());
        result = prime * result + ((this.taskStatus == null) ? 0 : this.taskStatus.hashCode());
        result = prime * result + ((this.logLevel == null) ? 0 : this.logLevel.hashCode());
        result = prime * result + ((this.message == null) ? 0 : this.message.hashCode());
        result = prime * result + ((this.errorDetail == null) ? 0 : this.errorDetail.hashCode());
        result = prime * result + ((this.logDatetime == null) ? 0 : this.logDatetime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CronTaskLog (");

        sb.append(taskName);
        sb.append(", ").append(taskGroup);
        sb.append(", ").append(taskClass);
        sb.append(", ").append(taskMethod);
        sb.append(", ").append(initialParameter);
        sb.append(", ").append(taskStatus);
        sb.append(", ").append(logLevel);
        sb.append(", ").append(message);
        sb.append(", ").append(errorDetail);
        sb.append(", ").append(logDatetime);

        sb.append(")");
        return sb.toString();
    }
}
