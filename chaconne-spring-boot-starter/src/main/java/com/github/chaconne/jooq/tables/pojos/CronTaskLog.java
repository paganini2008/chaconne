/*
 * This file is generated by jOOQ.
 */
package com.github.chaconne.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CronTaskLog implements Serializable {

    private static final long serialVersionUID = 1L;

    private String taskName;
    private String taskGroup;
    private String taskClass;
    private String taskMethod;
    private String host;
    private String url;
    private String initialParameter;
    private LocalDateTime scheduledDatetime;
    private LocalDateTime firedDatetime;
    private String returnValue;
    private Long elapsed;
    private Integer status;
    private String errorDetail;

    public CronTaskLog() {}

    public CronTaskLog(CronTaskLog value) {
        this.taskName = value.taskName;
        this.taskGroup = value.taskGroup;
        this.taskClass = value.taskClass;
        this.taskMethod = value.taskMethod;
        this.host = value.host;
        this.url = value.url;
        this.initialParameter = value.initialParameter;
        this.scheduledDatetime = value.scheduledDatetime;
        this.firedDatetime = value.firedDatetime;
        this.returnValue = value.returnValue;
        this.elapsed = value.elapsed;
        this.status = value.status;
        this.errorDetail = value.errorDetail;
    }

    public CronTaskLog(
        String taskName,
        String taskGroup,
        String taskClass,
        String taskMethod,
        String host,
        String url,
        String initialParameter,
        LocalDateTime scheduledDatetime,
        LocalDateTime firedDatetime,
        String returnValue,
        Long elapsed,
        Integer status,
        String errorDetail
    ) {
        this.taskName = taskName;
        this.taskGroup = taskGroup;
        this.taskClass = taskClass;
        this.taskMethod = taskMethod;
        this.host = host;
        this.url = url;
        this.initialParameter = initialParameter;
        this.scheduledDatetime = scheduledDatetime;
        this.firedDatetime = firedDatetime;
        this.returnValue = returnValue;
        this.elapsed = elapsed;
        this.status = status;
        this.errorDetail = errorDetail;
    }

    /**
     * Getter for <code>cron_task_log.task_name</code>.
     */
    public String getTaskName() {
        return this.taskName;
    }

    /**
     * Setter for <code>cron_task_log.task_name</code>.
     */
    public CronTaskLog setTaskName(String taskName) {
        this.taskName = taskName;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.task_group</code>.
     */
    public String getTaskGroup() {
        return this.taskGroup;
    }

    /**
     * Setter for <code>cron_task_log.task_group</code>.
     */
    public CronTaskLog setTaskGroup(String taskGroup) {
        this.taskGroup = taskGroup;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.task_class</code>.
     */
    public String getTaskClass() {
        return this.taskClass;
    }

    /**
     * Setter for <code>cron_task_log.task_class</code>.
     */
    public CronTaskLog setTaskClass(String taskClass) {
        this.taskClass = taskClass;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.task_method</code>.
     */
    public String getTaskMethod() {
        return this.taskMethod;
    }

    /**
     * Setter for <code>cron_task_log.task_method</code>.
     */
    public CronTaskLog setTaskMethod(String taskMethod) {
        this.taskMethod = taskMethod;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.host</code>.
     */
    public String getHost() {
        return this.host;
    }

    /**
     * Setter for <code>cron_task_log.host</code>.
     */
    public CronTaskLog setHost(String host) {
        this.host = host;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.url</code>.
     */
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>cron_task_log.url</code>.
     */
    public CronTaskLog setUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.initial_parameter</code>.
     */
    public String getInitialParameter() {
        return this.initialParameter;
    }

    /**
     * Setter for <code>cron_task_log.initial_parameter</code>.
     */
    public CronTaskLog setInitialParameter(String initialParameter) {
        this.initialParameter = initialParameter;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.scheduled_datetime</code>.
     */
    public LocalDateTime getScheduledDatetime() {
        return this.scheduledDatetime;
    }

    /**
     * Setter for <code>cron_task_log.scheduled_datetime</code>.
     */
    public CronTaskLog setScheduledDatetime(LocalDateTime scheduledDatetime) {
        this.scheduledDatetime = scheduledDatetime;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.fired_datetime</code>.
     */
    public LocalDateTime getFiredDatetime() {
        return this.firedDatetime;
    }

    /**
     * Setter for <code>cron_task_log.fired_datetime</code>.
     */
    public CronTaskLog setFiredDatetime(LocalDateTime firedDatetime) {
        this.firedDatetime = firedDatetime;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.return_value</code>.
     */
    public String getReturnValue() {
        return this.returnValue;
    }

    /**
     * Setter for <code>cron_task_log.return_value</code>.
     */
    public CronTaskLog setReturnValue(String returnValue) {
        this.returnValue = returnValue;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.elapsed</code>.
     */
    public Long getElapsed() {
        return this.elapsed;
    }

    /**
     * Setter for <code>cron_task_log.elapsed</code>.
     */
    public CronTaskLog setElapsed(Long elapsed) {
        this.elapsed = elapsed;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.status</code>.
     */
    public Integer getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>cron_task_log.status</code>.
     */
    public CronTaskLog setStatus(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>cron_task_log.error_detail</code>.
     */
    public String getErrorDetail() {
        return this.errorDetail;
    }

    /**
     * Setter for <code>cron_task_log.error_detail</code>.
     */
    public CronTaskLog setErrorDetail(String errorDetail) {
        this.errorDetail = errorDetail;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CronTaskLog other = (CronTaskLog) obj;
        if (this.taskName == null) {
            if (other.taskName != null)
                return false;
        }
        else if (!this.taskName.equals(other.taskName))
            return false;
        if (this.taskGroup == null) {
            if (other.taskGroup != null)
                return false;
        }
        else if (!this.taskGroup.equals(other.taskGroup))
            return false;
        if (this.taskClass == null) {
            if (other.taskClass != null)
                return false;
        }
        else if (!this.taskClass.equals(other.taskClass))
            return false;
        if (this.taskMethod == null) {
            if (other.taskMethod != null)
                return false;
        }
        else if (!this.taskMethod.equals(other.taskMethod))
            return false;
        if (this.host == null) {
            if (other.host != null)
                return false;
        }
        else if (!this.host.equals(other.host))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.initialParameter == null) {
            if (other.initialParameter != null)
                return false;
        }
        else if (!this.initialParameter.equals(other.initialParameter))
            return false;
        if (this.scheduledDatetime == null) {
            if (other.scheduledDatetime != null)
                return false;
        }
        else if (!this.scheduledDatetime.equals(other.scheduledDatetime))
            return false;
        if (this.firedDatetime == null) {
            if (other.firedDatetime != null)
                return false;
        }
        else if (!this.firedDatetime.equals(other.firedDatetime))
            return false;
        if (this.returnValue == null) {
            if (other.returnValue != null)
                return false;
        }
        else if (!this.returnValue.equals(other.returnValue))
            return false;
        if (this.elapsed == null) {
            if (other.elapsed != null)
                return false;
        }
        else if (!this.elapsed.equals(other.elapsed))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.errorDetail == null) {
            if (other.errorDetail != null)
                return false;
        }
        else if (!this.errorDetail.equals(other.errorDetail))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.taskName == null) ? 0 : this.taskName.hashCode());
        result = prime * result + ((this.taskGroup == null) ? 0 : this.taskGroup.hashCode());
        result = prime * result + ((this.taskClass == null) ? 0 : this.taskClass.hashCode());
        result = prime * result + ((this.taskMethod == null) ? 0 : this.taskMethod.hashCode());
        result = prime * result + ((this.host == null) ? 0 : this.host.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.initialParameter == null) ? 0 : this.initialParameter.hashCode());
        result = prime * result + ((this.scheduledDatetime == null) ? 0 : this.scheduledDatetime.hashCode());
        result = prime * result + ((this.firedDatetime == null) ? 0 : this.firedDatetime.hashCode());
        result = prime * result + ((this.returnValue == null) ? 0 : this.returnValue.hashCode());
        result = prime * result + ((this.elapsed == null) ? 0 : this.elapsed.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.errorDetail == null) ? 0 : this.errorDetail.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CronTaskLog (");

        sb.append(taskName);
        sb.append(", ").append(taskGroup);
        sb.append(", ").append(taskClass);
        sb.append(", ").append(taskMethod);
        sb.append(", ").append(host);
        sb.append(", ").append(url);
        sb.append(", ").append(initialParameter);
        sb.append(", ").append(scheduledDatetime);
        sb.append(", ").append(firedDatetime);
        sb.append(", ").append(returnValue);
        sb.append(", ").append(elapsed);
        sb.append(", ").append(status);
        sb.append(", ").append(errorDetail);

        sb.append(")");
        return sb.toString();
    }
}
